[source, ipython3]
----
import scipy as sc
from scipy.sparse import *
from scipy.sparse.linalg import *
import numpy as np
import pandas as pd
import sys
import os
import matplotlib.pyplot as plt
import gstlearn as gl
import gstlearn.plot as gp
----

[source, ipython3]
----
dataDir = os.path.join(os.getenv('GSTLEARN_DATA'),"Scotland")
----

[source, ipython3]
----
dat = pd.read_csv(os.path.join(dataDir,"Scotland_Temperatures.csv"),sep=",",na_values="MISS")
dat.head()
----


----
[cols=",,,,",options="header",]
|==============================================
| |Longitude |Latitude |Elevation |January_temp
|0 |372.1 |658.9 |255 |1.7
|1 |303.5 |665.9 |125 |2.0
|2 |218.4 |597.9 |8 |4.6
|3 |245.0 |955.0 |90 |NaN
|4 |326.8 |691.2 |32 |3.1
|==============================================
----

[source, ipython3]
----
dat = dat.iloc[np.where(~np.isnan(dat["January_temp"]))[0],:]
temperatures = gl.Db()
names =dat.columns.to_list()
temperatures[names] = np.array(dat[names])
temperatures.setLocators(["Longitude","Latitude"],gl.ELoc.X)
temperatures.setLocator("January_temp",gl.ELoc.Z)
temperatures.setLocator("Elevation",gl.ELoc.F)
temperatures["sel"] = ~np.isnan(temperatures["*temp"])
temperatures.setLocator("sel",gl.ELoc.SEL)
temperatures
----


----
Data Base Characteristics
=========================

Data Base Summary
-----------------
File is organized as a set of isolated points
Space dimension              = 2
Number of Columns            = 5
Maximum Number of UIDs       = 5
Total number of samples      = 151
Number of active samples     = 151

Variables
---------
Column = 0 - Name = Longitude - Locator = x1
Column = 1 - Name = Latitude - Locator = x2
Column = 2 - Name = Elevation - Locator = f1
Column = 3 - Name = January_temp - Locator = z1
Column = 4 - Name = sel - Locator = sel----

[source, ipython3]
----
MNT = pd.read_csv(os.path.join(dataDir,"Scotland_Elevations.csv"),sep=",")
MNT.head()
----


----
[cols=",,,,",options="header",]
|=========================================
| |Longitude |Latitude |Elevation |inshore
|0 |65 |535 |NaN |False
|1 |70 |535 |NaN |False
|2 |75 |535 |NaN |False
|3 |80 |535 |NaN |False
|4 |85 |535 |NaN |False
|=========================================
----

[source, ipython3]
----
mnt = gl.Db()
names = MNT.columns.to_list()
mnt[names] = np.array(MNT[names])
mnt.setLocators(["Longitude","Latitude"],gl.ELoc.X)
----

[source, ipython3]
----
grid = gl.DbGrid.createCoveringDb(mnt, nodes=[81,137])
gl.migrateVariables(mnt,grid,["Elevation","inshore"],namconv = gl.NamingConvention(""))
grid.setLocator("Elevation",gl.ELoc.F)
grid.setLocator("inshore",gl.ELoc.SEL)
gp.grid(grid,"Elevation")

#Put Nan to 0 for selection (it should become useless in future version)
u = grid["inshore"]
u[np.isnan(grid["inshore"])] = 0.
grid["inshore"] = u
----


----
![png](/home/drenard/project_gstlearn/gstlearn/build/tests/ipynb/Release/Test_SPDEDrift_6_0.png)
----

[source, ipython3]
----
v = gl.VarioParam()
dir1 = gl.DirParam(2,18,25)
v.addDir(dir1)
vario = gl.Vario(v,temperatures)
md = gl.Model.createFromDb(temperatures)
md.addDrift(gl.Drift1(md.getContext()))
md.addDrift(gl.DriftF(md.getContext()))
vario.compute(model=md)
ax=gp.vario(vario)

----


----
![png](/home/drenard/project_gstlearn/gstlearn/build/tests/ipynb/Release/Test_SPDEDrift_7_0.png)
----

[source, ipython3]
----
model = gl.Model.createFromDb(temperatures)
model.setDriftList(md.getDriftList())

structs = [gl.ECov.NUGGET,gl.ECov.BESSEL_K,gl.ECov.BESSEL_K]
structs = [gl.ECov.NUGGET,gl.ECov.BESSEL_K]

consNug = gl.ConsItem.define(gl.EConsElem.SILL,0, type = gl.EConsType.UPPER,value = 0.1)

cons1P = gl.ConsItem.define(gl.EConsElem.PARAM,1, type = gl.EConsType.EQUAL,value = 1)
cons1Rm = gl.ConsItem.define(gl.EConsElem.RANGE,1, type = gl.EConsType.LOWER,value = 100)
cons1RM = gl.ConsItem.define(gl.EConsElem.RANGE,1, type = gl.EConsType.UPPER,value = 350)

cons2P = gl.ConsItem.define(gl.EConsElem.PARAM,2, type = gl.EConsType.EQUAL,value = 2)
cons2Rm = gl.ConsItem.define(gl.EConsElem.RANGE,2, type = gl.EConsType.LOWER,value = 100)
cons2RM = gl.ConsItem.define(gl.EConsElem.RANGE,2, type = gl.EConsType.UPPER,value = 400)

a = gl.Constraints()
a.addItem(consNug)
a.addItem(cons1P)
a.addItem(cons1Rm)
a.addItem(cons1RM)
a.addItem(cons2P)
a.addItem(cons2Rm)
a.addItem(cons2RM)

err = model.fit(vario,structs,constraints=a)
ax = gp.varmod(vario,model,title="Vario of the residuals")
----


----
![png](/home/drenard/project_gstlearn/gstlearn/build/tests/ipynb/Release/Test_SPDEDrift_8_0.png)
----

[source, ipython3]
----
model
----


----
Model characteristics
=====================
Space dimension              = 2
Number of variable(s)        = 1
Number of basic structure(s) = 2
Number of drift function(s)  = 2
Number of drift equation(s)  = 2

Covariance Part
---------------
Nugget Effect
- Sill         =      0.100
K-Bessel (Third Parameter = 1)
- Sill         =      0.420
- Range        =    282.574
- Theo. Range  =     81.572
Total Sill     =      0.520

Drift Part
----------
Universality Condition
External Drift - Rank=0----

[source, ipython3]
----
spde = gl.SPDE(model,grid,temperatures,gl.ESPDECalcMode.KRIGING)
----

[source, ipython3]
----
coeffs = spde.getCoeffs()
----

[source, ipython3]
----
ax = gp.correlation(temperatures, "Elevation", "*temp", asPoint=True)
if len(coeffs)>1:
    plt.plot([0,400], [coeffs[0],coeffs[0]+coeffs[1]*400])
----


----
![png](/home/drenard/project_gstlearn/gstlearn/build/tests/ipynb/Release/Test_SPDEDrift_12_0.png)
----

[source, ipython3]
----
model
----


----
Model characteristics
=====================
Space dimension              = 2
Number of variable(s)        = 1
Number of basic structure(s) = 2
Number of drift function(s)  = 2
Number of drift equation(s)  = 2

Covariance Part
---------------
Nugget Effect
- Sill         =      0.100
K-Bessel (Third Parameter = 1)
- Sill         =      0.420
- Range        =    282.574
- Theo. Range  =     81.572
Total Sill     =      0.520

Drift Part
----------
Universality Condition
External Drift - Rank=0----

[source, ipython3]
----
fileM = os.path.join(dataDir,"model.ascii")
model.dumpToNF(fileM)
fileG = os.path.join(dataDir,"grid.ascii")
grid.dumpToNF(fileG)
fileT = os.path.join(dataDir,"temperatures.ascii")
temperatures.dumpToNF(fileT)
fileV = os.path.join(dataDir,"vario.ascii")
vario.dumpToNF(fileV)
----


----True----

[source, ipython3]
----
spde.compute()
iatt = spde.query(grid)
----

[source, ipython3]
----
model
----


----
Model characteristics
=====================
Space dimension              = 2
Number of variable(s)        = 1
Number of basic structure(s) = 2
Number of drift function(s)  = 2
Number of drift equation(s)  = 2

Covariance Part
---------------
Nugget Effect
- Sill         =      0.100
K-Bessel (Third Parameter = 1)
- Sill         =      0.420
- Range        =    282.574
- Theo. Range  =     81.572
Total Sill     =      0.520

Drift Part
----------
Universality Condition
External Drift - Rank=0----

[source, ipython3]
----
err = gl.kriging(temperatures,grid,model,gl.NeighUnique.create(2))
----

[source, ipython3]
----
ax = gp.grid(grid,"spde*")
ax = gp.grid(grid,"*estim")
----


----
![png](/home/drenard/project_gstlearn/gstlearn/build/tests/ipynb/Release/Test_SPDEDrift_18_0.png)

![png](/home/drenard/project_gstlearn/gstlearn/build/tests/ipynb/Release/Test_SPDEDrift_18_1.png)
----

[source, ipython3]
----
ax = gp.correlation(grid,"*estim","spde*",asPoint=True, diagLine=True)
ax = gp.correlation(grid,"*estim","spde*", diagLine=True)
----


----
![png](/home/drenard/project_gstlearn/gstlearn/build/tests/ipynb/Release/Test_SPDEDrift_19_0.png)

![png](/home/drenard/project_gstlearn/gstlearn/build/tests/ipynb/Release/Test_SPDEDrift_19_1.png)
----

[source, ipython3]
----

----
