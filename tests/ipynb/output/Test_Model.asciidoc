[[demonstration-of-gstlearn-for-a-2-d-case-study]]
= Demonstration of gstlearn for a 2-D case study

[source, javascript]
----
%%javascript
IPython.OutputArea.prototype._should_scroll = function(lines) {
    return false;
}
----


----<IPython.core.display.Javascript object>----

[[import-packages]]
== Import packages

[source, ipython3]
----
import numpy as np
import pandas as pd
import sys
import os
import gstlearn as gl
import gstlearn.plot as gp
----

[[create-a-lmc-model]]
= Create a LMC Model

We create a Context for 1 variable in the 2-D space.

[source, ipython3]
----
nvar = 1
ndim = 2
ctxt = gl.CovContext(nvar, ndim)
----

We build a list of covariances

[source, ipython3]
----
covlmc = gl.CovLMC(ctxt.getSpace())
cova = gl.CovAniso(gl.ECov.EXPONENTIAL, 2, 0, 1.5, ctxt)
covlmc.addCov(cova)
----

Now a Model containing 'covs'

[source, ipython3]
----
mymodellmc = gl.Model(ctxt)
mymodellmc.setCovList(covlmc)
mymodellmc
----


----
Model characteristics
=====================
Space dimension              = 2
Number of variable(s)        = 1
Number of basic structure(s) = 1
Number of drift function(s)  = 0
Number of drift equation(s)  = 0

Covariance Part
---------------
Exponential
- Sill         =      1.500
- Range        =      2.000
- Theo. Range  =      0.668
Total Sill     =      1.500----

[source, ipython3]
----
ax = gp.model(mymodellmc, hmax = 2.5)
----


----
![png](/home/fors/Projets/gstlearn/gstlearn/build/tests/ipynb/Release/output/Test_Model_10_0.png)
----

[[tapering-model]]
= Tapering Model

We now use the same list of covariances but add a Tapering function

[source, ipython3]
----
covtape = gl.CovLMCTapering(gl.ETape.STORKEY, 2., ctxt.getSpace())
cova = gl.CovAniso(gl.ECov.EXPONENTIAL, 2, 0, 1.5, ctxt)
covtape.addCov(cova)
----

[source, ipython3]
----
mymodeltape = gl.Model(ctxt)
mymodeltape.setCovList(covtape)
mymodeltape
----


----
Model characteristics
=====================
Space dimension              = 2
Number of variable(s)        = 1
Number of basic structure(s) = 1
Number of drift function(s)  = 0
Number of drift equation(s)  = 0

Covariance Part
---------------
Exponential
- Sill         =      1.500
- Range        =      2.000
- Theo. Range  =      0.668
Total Sill     =      1.500
Tapering Function     = Storkey
Tapering Scale        = 2----

[source, ipython3]
----
ax = gp.model(mymodellmc, hmax = 2.5, color='red')
ax = gp.model(mymodeltape, hmax = 2.5, ax=ax)
----


----
![png](/home/fors/Projets/gstlearn/gstlearn/build/tests/ipynb/Release/output/Test_Model_14_0.png)
----

[[convolution-model]]
= Convolution Model

[source, ipython3]
----
covconv = gl.CovLMCConvolution(gl.EConvType.EXPONENTIAL, gl.EConvDir.X, 0.1, 10, ctxt.getSpace())
cova = gl.CovAniso(gl.ECov.EXPONENTIAL, 2, 0, 1.5, ctxt)
covconv.addCov(cova)
----

[source, ipython3]
----
mymodelconv = gl.Model(ctxt)
mymodelconv.setCovList(covconv)
mymodelconv
----


----
Model characteristics
=====================
Space dimension              = 2
Number of variable(s)        = 1
Number of basic structure(s) = 1
Number of drift function(s)  = 0
Number of drift equation(s)  = 0

Covariance Part
---------------
Exponential
- Sill         =      1.500
- Range        =      2.000
- Theo. Range  =      0.668
Total Sill     =      1.062
Convolution type      = Exponential
Convolution direction = Along X
Nb. discretization    = 10
Convolution Scale     = 0.1----

[source, ipython3]
----
ax = gp.model(mymodellmc, hmax = 2.5, color='red')
ax = gp.model(mymodelconv, hmax = 2.5, ax=ax)
----


----
![png](/home/fors/Projets/gstlearn/gstlearn/build/tests/ipynb/Release/output/Test_Model_18_0.png)
----
