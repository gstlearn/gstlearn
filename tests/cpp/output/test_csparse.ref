Creating two testing vectors
URow (5 elements)
                [,1]
      [1,]    -1.347
      [2,]    -0.987
      [3,]    -0.422
      [4,]     0.250
      [5,]     1.590
UCol (6 elements)      0.510    -0.404    -0.535     1.473    -0.382    -1.238
Printing A using Tim Davies' primitive
CSparse Version 1.2.0, Mar 6, 2006.  Copyright (c) Timothy A. Davis, 2006
5-by-6, nzmax: 30 nnz: 30, 1-norm: 4.66446
    col 0 : locations 0 to 4
     0 : -0.0150735
     1 : 0.222813
     2 : 1.25605
     3 : -0.513412
     4 : 0.435009
    col 1 : locations 5 to 9
     0 : 0.134058
     1 : -0.174537
     2 : -0.960295
     3 : -0.771357
     4 : 0.462455
    col 2 : locations 10 to 14
     0 : -1.6265
     1 : 0.368299
     2 : -0.216008
     3 : 0.052976
     4 : -0.562797
    col 3 : locations 15 to 19
     0 : 0.296408
     1 : -0.0477803
     2 : 2.39323
     3 : 0.439336
     4 : -1.4877
    col 4 : locations 20 to 24
     0 : 0.241377
     1 : 1.53959
     2 : -0.197767
     3 : 0.847854
     4 : -0.348036
    col 5 : locations 25 to 29
     0 : -0.101997
     1 : 0.822804
     2 : 0.379538
     3 : -0.272285
     4 : -0.362162

Testing nice printout of A
..........................
cs_print_nice:
          [,  1]    [,  2]    [,  3]    [,  4]    [,  5]    [,  6]
[  1,]   -0.0151    0.1341   -1.6265    0.2964    0.2414   -0.1020 
[  2,]    0.2228   -0.1745    0.3683   -0.0478    1.5396    0.8228 
[  3,]    1.2560   -0.9603   -0.2160    2.3932   -0.1978    0.3795 
[  4,]   -0.5134   -0.7714    0.0530    0.4393    0.8479   -0.2723 
[  5,]    0.4350    0.4625   -0.5628   -1.4877   -0.3480   -0.3622 

cs_print_dim:: Nrow=5 Ncol=6
cs_print_nice (limited to nrows=2 and ncols=4): nrows<=2 ncols<=4
          [,  1]    [,  2]    [,  3]    [,  4]
[  1,]   -0.0151    0.1341   -1.6265    0.2964 
[  2,]    0.2228   -0.1745    0.3683   -0.0478 


Transposing a Matrix: t(A)
..........................
cs_transpose:
          [,  1]    [,  2]    [,  3]    [,  4]    [,  5]
[  1,]   -0.0151    0.2228    1.2560   -0.5134    0.4350 
[  2,]    0.1341   -0.1745   -0.9603   -0.7714    0.4625 
[  3,]   -1.6265    0.3683   -0.2160    0.0530   -0.5628 
[  4,]    0.2964   -0.0478    2.3932    0.4393   -1.4877 
[  5,]    0.2414    1.5396   -0.1978    0.8479   -0.3480 
[  6,]   -0.1020    0.8228    0.3795   -0.2723   -0.3622 


Creating a Symmetric Matrix: B = A % t(A)
.........................................
cs_multiply:
          [,  1]    [,  2]    [,  3]    [,  4]    [,  5]
[  1,]    2.8202   -0.3523    0.8266    0.1808    0.4828 
[  2,]   -0.3523    3.2654    0.2614    1.1001   -0.9538 
[  3,]    0.8266    0.2614    8.4572    0.8648   -3.4052 
[  4,]    0.1808    1.1001    0.8648    1.8474   -1.4599 
[  5,]    0.4828   -0.9538   -3.4052   -1.4599    3.1854 


Getting the Upper triangular part of a matrix: (U+D)(B)
.......................................................
cs_triangle (with diagonal):
          [,  1]    [,  2]    [,  3]    [,  4]    [,  5]
[  1,]    2.8202   -0.3523    0.8266    0.1808    0.4828 
[  2,]    0.0000    3.2654    0.2614    1.1001   -0.9538 
[  3,]    0.0000    0.0000    8.4572    0.8648   -3.4052 
[  4,]    0.0000    0.0000    0.0000    1.8474   -1.4599 
[  5,]    0.0000    0.0000    0.0000    0.0000    3.1854 


Getting the Lower triangular part of a matrix: L(B)
...................................................
cs_triangle (without diagonal):
          [,  1]    [,  2]    [,  3]    [,  4]    [,  5]
[  1,]    0.0000    0.0000    0.0000    0.0000    0.0000 
[  2,]   -0.3523    0.0000    0.0000    0.0000    0.0000 
[  3,]    0.8266    0.2614    0.0000    0.0000    0.0000 
[  4,]    0.1808    1.1001    0.8648    0.0000    0.0000 
[  5,]    0.4828   -0.9538   -3.4052   -1.4599    0.0000 


Testing product of matrix by vector: A % W
..........................................
cs_multiply:
          [,  1]
[  1,]    1.2788 
[  2,]   -1.6897 
[  3,]    4.2746 
[  4,]    0.6814 
[  5,]   -1.2737 

Should be equal to:      1.279    -1.690     4.275     0.681    -1.274

Testing product of matrix by vector: At % W
...........................................
cs_mulvec:
          [,  1]
[  1,]   -0.1661 
[  2,]    0.9386 
[  3,]    1.0376 
[  4,]   -3.6163 
[  5,]   -2.1027 
[  6,]   -1.4788 

Should be equal to:     -0.166     0.939     1.038    -3.616    -2.103    -1.479

Testing product of matrix (transposed) by vector: W % (A)
.........................................................
cs_tmulvec:
          [,  1]    [,  2]    [,  3]    [,  4]    [,  5]    [,  6]
[  1,]   -0.1661    0.9386    1.0376   -3.6163   -2.1027   -1.4788 

Should be equal to:     -0.166     0.939     1.038    -3.616    -2.103    -1.479

Testing product of upper triangle by vector: (U+D)(B) % W
.........................................................
cs_mulvec_uptri:
                [,1]
      [1,]    -2.988
      [2,]    -4.575
      [3,]    -8.762
      [4,]    -1.859
      [5,]     5.064
      [6,]     0.000
Should be equal to:     -2.988    -4.575    -8.762    -1.859     5.064     0.000

Testing product of lower triangle by vector: L(B) % W
.....................................................
cs_mulvec_lowtri:
                [,1]
      [1,]     0.000
      [2,]     0.475
      [3,]    -1.372
      [4,]    -1.694
      [5,]     1.361
      [6,]     0.000
Should be equal to:      0.000     0.475    -1.372    -1.694     1.361     0.000

Solving the Lower Triangular system: L(B) % (X) = W
...................................................
cs_lsolve_lowtri:
                [,1]
      [1,]    -1.347
      [2,]    -0.987
      [3,]    -0.422
      [4,]     0.250
      [5,]     1.590
Should be:     -1.347    -0.987    -0.422     0.250     1.590

Solving the Upper Triangular system: (U+D)(B) % (X) = W
.......................................................
cs_lsolve_uptri:
                [,1]
      [1,]    -1.347
      [2,]    -0.987
      [3,]    -0.422
      [4,]     0.250
      [5,]     1.590
Should be:     -1.347    -0.987    -0.422     0.250     1.590

Testing Extration from A (by ranges)
....................................
Initial Matrix
          [,  1]    [,  2]    [,  3]    [,  4]    [,  5]    [,  6]
[  1,]   -0.0151    0.1341   -1.6265    0.2964    0.2414   -0.1020 
[  2,]    0.2228   -0.1745    0.3683   -0.0478    1.5396    0.8228 
[  3,]    1.2560   -0.9603   -0.2160    2.3932   -0.1978    0.3795 
[  4,]   -0.5134   -0.7714    0.0530    0.4393    0.8479   -0.2723 
[  5,]    0.4350    0.4625   -0.5628   -1.4877   -0.3480   -0.3622 

Extracted rows[from 2 length 2] and lines[from 3 length 3]
          [,  1]    [,  2]    [,  3]
[  1,]    0.3683   -0.0478    1.5396 
[  2,]   -0.2160    2.3932   -0.1978 


Testing Extration from A (by indices)
.....................................
Initial Matrix
          [,  1]    [,  2]    [,  3]    [,  4]    [,  5]    [,  6]
[  1,]   -0.0151    0.1341   -1.6265    0.2964    0.2414   -0.1020 
[  2,]    0.2228   -0.1745    0.3683   -0.0478    1.5396    0.8228 
[  3,]    1.2560   -0.9603   -0.2160    2.3932   -0.1978    0.3795 
[  4,]   -0.5134   -0.7714    0.0530    0.4393    0.8479   -0.2723 
[  5,]    0.4350    0.4625   -0.5628   -1.4877   -0.3480   -0.3622 

Row Selection:         -1         0        -1         1        -1
Col Selection:         -1        -1         0        -1         1         2
Extracted Matrix:
          [,  1]    [,  2]    [,  3]
[  1,]    0.3683    1.5396    0.8228 
[  2,]    0.0530    0.8479   -0.2723 

No Memory Leak
