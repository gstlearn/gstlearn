name: nonreg-tests_windows-latest-rtools

on:
  # Permit calling trigger
  workflow_call:
  # Activate the workflow at each push on dev branch
  #push:
  #  branches: [ dev ]
  # Activate the workflow at each pull request on dev branch
  #pull_request:
  #  branches: [ dev ]
  # Permit manual trigger
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Manual'
        required: false
        default: ''

env:
  # Customize the CMake build type here (Release, Debug)
  CMAKE_BUILD_TYPE : Release
  BUILD_DIR : build
  CMAKE_GENERATOR : "MSYS Makefiles"
  R_VERSION : "4.5.0"
  SWIG_ROOT : ${{github.workspace}}\swig

jobs:

  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup R Version
      uses: r-lib/actions/setup-r@v2
      with:
        r-version: ${{env.R_VERSION}}

    - name: Install dependencies
      run: |
        pacman -Syu --noconfirm
        pacman -Sy --noconfirm mingw-w64-x86_64-boost
        pacman -Sy --noconfirm mingw-w64-x86_64-eigen3
        pacman -Sy --noconfirm mingw-w64-x86_64-nlopt
        pacman -Sy --noconfirm mingw-w64-x86_64-hdf5

    - name: Install the customized SWIG from source
      uses: fabien-ors/install-swig-windows-action@v2
      with:
        swig-root: ${{env.SWIG_ROOT}}
        generator: "Visual Studio 17 2022"

    - name: Configure build directory
      run: |
        cmake `
          -B${{ env.BUILD_DIR }} `
          -DBUILD_TESTING=ON `
          -DBUILD_R=ON `
          -DBUILD_PYTHON=OFF `
          -DHDF5_USE_STATIC_LIBRARIES=ON `
          -DSWIG_EXECUTABLE=${{env.SWIG_ROOT}}/bin/swig

    - name: Build the package
      run: |
        cmake --build ${{env.BUILD_DIR}} --parallel 3

    - name: Install packages and execute non-regression tests
      run: |
        cmake --build ${{env.BUILD_DIR}} --parallel 3 --target check

    - name: Compress output logs and neutral files
      if: success() || failure()
      shell: powershell
      run: |
        cd ${{env.BUILD_DIR}}/tests
        Get-ChildItem -Recurse -Filter '*.out' | Select-Object -ExpandProperty Fullname | Resolve-Path -Relative > logs.txt
        foreach ($filename in Get-Content .\logs.txt)
        {
            Compress-Archive -Update $filename .\rtools-logs.zip
        }
        cd $HOME/gstlearn_dir
        Get-ChildItem -Recurse -Filter '*.*' | Select-Object -ExpandProperty Fullname | Resolve-Path -Relative > neutral.txt
        foreach ($filename in Get-Content .\neutral.txt)
        {
            Compress-Archive -Update $filename .\rtools-neutral.zip
        }
        Move-Item -Path rtools-neutral.zip -Destination ${{github.workspace}}

    - name: Publish output logs as artefact
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: rtools-nonreg-logs
        path: ${{env.BUILD_DIR}}/tests/rtools-logs.zip

    - name: Publish output neutral files as artefact
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: rtools-neutral-files
        path: ${{github.workspace}}/rtools-neutral.zip
