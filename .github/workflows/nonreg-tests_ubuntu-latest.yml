name: nonreg-tests_ubuntu-latest

on:
  # Permit calling trigger
  workflow_call:
  # Activate the workflow at each push on dev branch
  #push:
  #  branches: [ dev ]
  # Activate the workflow at each pull request on dev branch
  #pull_request:
  #  branches: [ dev ]
  # Permit manual trigger
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Manual'
        required: false
        default: ''

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  CMAKE_BUILD_TYPE : Release
  BUILD_DIR : build
  PYTHON_VERSION : "3.13"
  R_VERSION : "4.5.0"
  SWIG_ROOT : ${{github.workspace}}/swig

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        sudo rm /etc/apt/sources.list.d/microsoft-prod.list
        sudo apt-get update
        sudo apt-get install -yq \
          libhdf5-dev \
          libopenmpi-dev \
          libboost-dev \
          libeigen3-dev \
          libnlopt-dev

    - name: Setup Python Version
      uses: actions/setup-python@v5
      with:
        python-version: ${{env.PYTHON_VERSION}}

    - name: Install python dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install numpy
        python -m pip install pandas scipy mlxtend

    - name: Setup R Version
      uses: r-lib/actions/setup-r@v2
      with:
        r-version: ${{env.R_VERSION}}

    - name: Install the customized SWIG from source
      uses: fabien-ors/install-swig-unix-action@v1
      with:
        swig-root: ${{env.SWIG_ROOT}}
        generator: "Unix Makefiles"

    - name: Run sccache-cache
      uses: mozilla-actions/sccache-action@v0.0.9

    - name: Configure build directory
      run: |
        cmake \
          -B${{ env.BUILD_DIR }} \
          -DBUILD_TESTING=ON \
          -DBUILD_ASAN=ON \
          -DBUILD_PYTHON=ON \
          -DBUILD_R=ON \
          -DSWIG_EXECUTABLE=${{env.SWIG_ROOT}}/bin/swig
      env:
        CXXFLAGS: -Werror
        SCCACHE_GHA_ENABLED: "true"
        CMAKE_CC_COMPILER_LAUNCHER: sccache
        CMAKE_CXX_COMPILER_LAUNCHER: sccache

    - name: Build the package
      run: |
        cmake --build ${{env.BUILD_DIR}} --parallel 3

    - name: Install packages and execute non-regression tests
      run: |
        cmake --build ${{env.BUILD_DIR}} --parallel 3 --target check
      env:
        ASAN_OPTIONS: abort_on_error=1:detect_leaks=0
        LD_PRELOAD: "/usr/lib/x86_64-linux-gnu/libasan.so.8 /usr/lib/x86_64-linux-gnu/libstdc++.so.6"

    - name: Compress output logs and neutral files
      if: success() || failure()
      run: |
        cd ${{env.BUILD_DIR}}/tests
        find . -type f -name "*.out" -print0 | tar -czvf ubuntu-logs.tar.gz --null -T -
        cd $HOME/gstlearn_dir
        find . -type f -name "*.*" -print0 | tar -czvf ubuntu-neutral.tar.gz --null -T -
        mv ubuntu-neutral.tar.gz ${{github.workspace}}/

    - name: Publish output logs as artefact
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: ubuntu-nonreg-logs
        path: ${{env.BUILD_DIR}}/tests/ubuntu-logs.tar.gz

    - name: Publish output neutral files as artefact
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: ubuntu-neutral-files
        path: ${{github.workspace}}/ubuntu-neutral.tar.gz
