name: publish_courses

on:
  # Permit calling the workflow from outside (https://github.com/actions/runner/discussions/1884)
  workflow_call:
    inputs:
      dry_publish:
        description: 'Dry publish (no upload)'
        type: boolean
        required: false
        default: true
  # Permit manual trigger
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Manual'
        required: false
        default: ''
      dry_publish:
        description: 'Dry publish (no upload)'
        type: boolean
        required: false
        default: false

env:
  CMAKE_BUILD_TYPE: Release
  BUILD_DIR : build
  PYTHON_VERSION : "3.11"
  NUMPY_VERSION : "1.23.5"
  R_VERSION : "4.3.2"
  SWIG_ROOT : ${{github.workspace}}/swig

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      # https://docs.github.com/en/actions/using-jobs/defining-outputs-for-jobs
      project_version: ${{ steps.main_step.outputs.PROJECT_VERSION }}

    steps:
    - uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        sudo rm /etc/apt/sources.list.d/microsoft-prod.list
        sudo apt-get update
        sudo apt-get install -yq \
          libhdf5-dev \
          libopenmpi-dev \
          libboost-dev \
          libeigen3-dev \
          libhdf5-dev \
          libnlopt-dev

    - name: Setup Python Version
      uses: actions/setup-python@v5
      with:
        python-version: ${{env.PYTHON_VERSION}}

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install numpy==${{env.NUMPY_VERSION}}
        python -m pip install jupyter
        python -m pip install notebook==6.1.6
        python -m pip install matplotlib
        python -m pip install plotly
        python -m pip install pandas
        python -m pip install scipy
        python -m pip install dash

    - name: Setup R Version
      uses: r-lib/actions/setup-r@v2
      with:
        r-version: ${{env.R_VERSION}}

    # Separate installation from roxygen2 (pak dependency conflicts)
    - name: Install R dependencies
      run: |
        Rscript -e "install.packages (
          c('ggplot2', 
            'vctrs', 
            'ggpubr', 
            'ggrepel', 
            'ggnewscale', 
            'lares', 
            'Matrix', 
            'FNN', 
            'rgl', 
            'tidyr', 
            'geigen', 
            'callr'),
            repos='https://cloud.r-project.org/')"

    - name: Install R dependencies
      uses: r-lib/actions/setup-r-dependencies@v2
      with:
        packages: roxygen2
        install-pandoc: false

    - name: Install the customized SWIG from source
      uses: fabien-ors/install-swig-unix-action@v1
      with:
        swig-root: ${{env.SWIG_ROOT}}
        generator: "Unix Makefiles"

    - name: Configure build directory
      run: |
        cmake \
          -B${{ env.BUILD_DIR }} \
          -DBUILD_PYTHON=ON \
          -DBUILD_R=ON \
          -DSWIG_EXECUTABLE=${{env.SWIG_ROOT}}/bin/swig

    - name: Compile the package
      run: |
        cmake --build ${{env.BUILD_DIR}} --parallel 3

    - name: Build demonstration HTMLs and save generated folder name in the environment
      id: main_step
      run: |
        cmake --build ${{env.BUILD_DIR}} --parallel 3 --target build_courses
        PROJECT_VERSION=$(cmake --build ${{env.BUILD_DIR}} --target print_version | grep PROJECT_VERSION | cut -d "=" -f2 | xargs)
        echo "COURSES_FOLDER=${{env.BUILD_DIR}}/courses" >> "$GITHUB_ENV"
        echo "PROJECT_VERSION=${PROJECT_VERSION}" >> "$GITHUB_OUTPUT"

    - uses: actions/upload-artifact@v4
      with:
        # This will become the folder name in the server
        name: courses
        path: ${{ env.COURSES_FOLDER }}

  publish:
    needs: build
    if: ${{inputs.dry_publish == false}}
    
    # Only ubuntu can upload to a server easily (ssh)
    runs-on: ubuntu-latest
    
    steps:
      - env:
          PROJECT_VERSION: ${{needs.build.outputs.project_version}}
        uses: fabien-ors/folder-publish-action@v4
        with:
          host: ${{ secrets.CG_HOST }}
          username: ${{ secrets.CG_USR }}
          password: ${{ secrets.CG_PWD }}
          dest-path: "/var/www/html/gstlearn/${{ env.PROJECT_VERSION }}"
  
      # Delete the artifacts (for freeing storage space under github)
      - uses: geekyeggo/delete-artifact@v5
        with:
          name: courses
