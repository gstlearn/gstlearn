name: publish_r_windows

on:
  # Permit calling the workflow from outside (https://github.com/actions/runner/discussions/1884)
  workflow_call:
    inputs:
      dry_publish:
        description: 'Dry publish (no upload)'
        type: boolean
        required: false
        default: true
  # Permit manual trigger
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Manual'
        required: false
        default: ''
      dry_publish:
        description: 'Dry publish (no upload)'
        type: boolean
        required: false
        default: false

env:
  # Customize the CMake build type here (Release, Debug)
  CMAKE_BUILD_TYPE : Release
  BUILD_DIR : build
  CMAKE_GENERATOR : "MSYS Makefiles"
  SWIG_ROOT : ${{github.workspace}}\swig_420b
  DOXYGEN_ROOT : ${{github.workspace}}\doxygen
  DOXYGEN_VERSION : "1.9.8"
  CMAKE_TOOLCHAIN_FILE : C:\vcpkg\scripts\buildsystems\vcpkg.cmake
  VCPKG_LIBRARY_LINKAGE: static

jobs:

  build:
    runs-on: windows-2022
    strategy:
      matrix:
        # Last releases from here https://cran.r-project.org/src/base/R-4/
        # TODO : R 4.0.5 and 4.1.3 no more supported under windows? To be removed?
        r_version: [4.0.5, 4.1.3, 4.2.3, 4.3.3, 4.4.2]

    steps:
    - uses: actions/checkout@v4

    - name: Setup R Version
      uses: r-lib/actions/setup-r@v2
      with:
        r-version: ${{matrix.r_version}}

    # pkgbuild needed for R < 4.2 under windows only
    - name: Install roxygen2
      uses: r-lib/actions/setup-r-dependencies@v2
      with:
        packages: roxygen2, pkgbuild
        install-pandoc: false

    - name: Install dependencies
      run: |
        echo '{
          "dependencies": [ "boost-math", "eigen3", "nlopt" ],
          "builtin-baseline": "d5ec528843d29e3a52d745a64b469f810b2cedbf"
        }' > vcpkg.json
        vcpkg install

    - name: Install Doxygen under windows
      uses: fabien-ors/install-doxygen-windows-action@v1
      with:
        doxygen-root: ${{env.DOXYGEN_ROOT}}
        doxygen-version: ${{env.DOXYGEN_VERSION}}

    - name: Install the customized SWIG from source
      uses: fabien-ors/install-swig-windows-action@v2
      with:
        swig-root: ${{env.SWIG_ROOT}}
        generator: "Visual Studio 17 2022"

    - name: Build & install HDF5 static libraries
      uses: ./.github/actions/hdf5_static_windows

    - name : Configure build directory
      run : |
        cmake `
          -B${{ env.BUILD_DIR }} `
          -DBUILD_PYTHON=OFF `
          -DBUILD_R=ON `
          -DBUILD_DOXYGEN=ON `
          -DHDF5_USE_STATIC_LIBRARIES=ON `
          -DSWIG_EXECUTABLE=${{env.SWIG_ROOT}}/bin/swig `
          -DDoxygen_ROOT=${{env.DOXYGEN_ROOT}}
      env:
        HDF5_ROOT: "C:/Program Files/HDF5/cmake/"

    - name : Build the package and save generated file name in the environment
      run : |
        cmake --build ${{env.BUILD_DIR}} --parallel 3 --target r_install
        $PKG_PATH = Get-ChildItem -Path "${{env.BUILD_DIR}}/r/${{env.CMAKE_BUILD_TYPE}}/gstlearn_*.zip" -File
        echo "MY_PKG=$PKG_PATH" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append

    - uses: actions/upload-artifact@v4
      # Use specific artifact identifier for publishing all R versions
      with:
        name: windows-r-package-${{matrix.r_version}}
        path: ${{env.MY_PKG}}

  test:
    needs: build
    runs-on: windows-2022
    strategy:
      matrix:
        # Last releases from here https://cran.r-project.org/src/base/R-4/
        r_version: [4.0.5, 4.1.3, 4.2.3, 4.3.3, 4.4.2]

    steps:
    - uses: actions/checkout@v4

    - uses: actions/download-artifact@v4
      with:
        name: windows-r-package-${{matrix.r_version}}

    - name: Setup R Version
      uses: r-lib/actions/setup-r@v2
      with:
        r-version: ${{matrix.r_version}}

    - name: Install R package
      run: Rscript -e "install.packages(""'""./$(ls *.zip)""'"", repos=NULL, type='source')"
      shell: bash

    - name: Test installed R package
      run: |
        Rscript -e "library('gstlearn'); acknowledge_gstlearn()"
        Rscript tests/r/test_Arguments.R
        Rscript tests/r/test_Assessors.R
        Rscript tests/r/test_Matrix.R

  publish:
    needs: test
    if: ${{inputs.dry_publish == false}}

    # Only ubuntu can upload to CRAN easily (ssh)
    runs-on: ubuntu-latest

    steps:
    # Publish packages to our CRAN
    - uses: fabien-ors/cran-publish-action@v4
      with:
        host: ${{secrets.CG_HOST}}
        username: ${{secrets.CG_USR}}
        password: ${{secrets.CG_PWD}}
        repo-path: "/var/www/html/cran"

    # Delete the artifacts (for freeing storage space under github)
    - uses: geekyeggo/delete-artifact@v5
      with:
        name: windows-r-package-*
