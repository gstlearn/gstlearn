name: nonreg-tests_windows-latest-msvc

on:
  # Permit calling trigger
  workflow_call:
  # Activate the workflow at each push on dev branch
  #push:
  #  branches: [ dev ]
  # Activate the workflow at each pull request on dev branch
  #pull_request:
  #  branches: [ dev ]
  # Permit manual trigger
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Manual'
        required: false
        default: ''

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  CMAKE_BUILD_TYPE : Release
  BUILD_DIR : build
  CMAKE_GENERATOR : Ninja
  PYTHON_VERSION : "3.11"
  #HDF5_ROOT : hdf5 #do not use "." in the name
  #HDF5_URL : "https://www.hdfgroup.org/package/cmake-hdf5-1-12-1-zip/?wpdmdl=15723"
  #HDF5_VERSION : hdf5-1.12.1

jobs:

  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup Python Version
      uses: actions/setup-python@v5
      with:
        python-version: ${{env.PYTHON_VERSION}}

    - name: Install python dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install numpy
        python -m pip install pandas scipy mlxtend

    - name: Setup Conda
      uses: s-weigand/setup-conda@v1

    - name: Install dependencies
      run: |
        conda install -c conda-forge boost
        conda install -c conda-forge eigen
        conda install -c conda-forge ninja
        conda install -c conda-forge nlopt

        # don't interfere with pre-installed Python
        rm C:\Miniconda\python.exe

    - name: Run sccache-cache
      uses: mozilla-actions/sccache-action@v0.0.5

    - name: Set up Visual Studio shell
      uses: egor-tensin/vs-shell@v2

    - name: Configure build directory
      run: |
        cmake `
          -B${{ env.BUILD_DIR }} `
          -DBUILD_TESTING=ON `
          -DBUILD_PYTHON=ON
      env:
        SCCACHE_GHA_ENABLED: "true"
        CMAKE_CC_COMPILER_LAUNCHER: sccache
        CMAKE_CXX_COMPILER_LAUNCHER: sccache
        CMAKE_PREFIX_PATH: C:\conda\Library\lib\cmake;C:\conda\Library\share\eigen3\cmake;

    - name: Build the package
      run: |
        cmake --build ${{env.BUILD_DIR}} --parallel 3

    - name: Install packages and execute non-regression tests
      run: |
        cmake --build ${{env.BUILD_DIR}} --target check

    - name: Compress output logs and neutral files
      if: success() || failure()
      shell: powershell
      run: |
        cd ${{env.BUILD_DIR}}/tests
        Get-ChildItem -Recurse -Filter '*.out' | Select-Object -ExpandProperty Fullname | Resolve-Path -Relative > logs.txt
        foreach ($filename in Get-Content .\logs.txt)
        {
            Compress-Archive -Update $filename .\msvc-logs.zip
        }
        cd $HOME/gstlearn_dir
        Get-ChildItem -Recurse -Filter '*.*' | Select-Object -ExpandProperty Fullname | Resolve-Path -Relative > neutral.txt
        foreach ($filename in Get-Content .\neutral.txt)
        {
            Compress-Archive -Update $filename .\msvc-neutral.zip
        }
        Move-Item -Path msvc-neutral.zip -Destination ${{github.workspace}}

    - name: Publish output logs as artefact
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: msvc-nonreg-logs
        path: ${{env.BUILD_DIR}}/tests/msvc-logs.zip

    - name: Publish output neutral files as artefact
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: msvc-neutral-files
        path: ${{github.workspace}}/msvc-neutral.zip
