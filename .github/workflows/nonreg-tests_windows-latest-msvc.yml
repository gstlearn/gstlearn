name: nonreg-tests_windows-latest-msvc

on:
  # Permit calling trigger
  workflow_call:
  # Activate the workflow at each push on dev branch
  #push:
  #  branches: [ dev ]
  # Activate the workflow at each pull request on dev branch
  #pull_request:
  #  branches: [ dev ]
  # Permit manual trigger
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Manual'
        required: false
        default: ''

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  CMAKE_BUILD_TYPE : Release
  BUILD_DIR : build
  CMAKE_GENERATOR : Ninja
  PYTHON_VERSION : "3.11"

jobs:

  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.2
      with:
        run-install: false

    - name: Install dependencies
      run: |
        pixi init
        pixi add python==${{env.PYTHON_VERSION}}
        pixi add pip numpy pandas scipy mlxtend
        pixi add libboost-devel eigen ninja hdf5

    - name: Run sccache-cache
      uses: mozilla-actions/sccache-action@v0.0.5

    - name: Set up Visual Studio shell
      uses: egor-tensin/vs-shell@v2

    - name: Build & install NLopt static libraries
      uses: ./.github/actions/nlopt_static_windows

    - name: Configure build directory
      run: |
        pixi run cmake `
          -B${{ env.BUILD_DIR }} `
          -DBUILD_TESTING=ON `
          -DBUILD_PYTHON=ON
      env:
        SCCACHE_GHA_ENABLED: "true"
        CMAKE_CC_COMPILER_LAUNCHER: sccache
        CMAKE_CXX_COMPILER_LAUNCHER: sccache

    - name: Build the package
      run: |
        cmake --build ${{env.BUILD_DIR}} --parallel 3

    - name: Install packages and execute non-regression tests
      run: |
        pixi run cmake --build ${{env.BUILD_DIR}} --target check

    - name: Compress output logs and neutral files
      if: success() || failure()
      shell: powershell
      run: |
        cd ${{env.BUILD_DIR}}/tests
        Get-ChildItem -Recurse -Filter '*.out' | Select-Object -ExpandProperty Fullname | Resolve-Path -Relative > logs.txt
        foreach ($filename in Get-Content .\logs.txt)
        {
            Compress-Archive -Update $filename .\msvc-logs.zip
        }
        cd $HOME/gstlearn_dir
        Get-ChildItem -Recurse -Filter '*.*' | Select-Object -ExpandProperty Fullname | Resolve-Path -Relative > neutral.txt
        foreach ($filename in Get-Content .\neutral.txt)
        {
            Compress-Archive -Update $filename .\msvc-neutral.zip
        }
        Move-Item -Path msvc-neutral.zip -Destination ${{github.workspace}}

    - name: Publish output logs as artefact
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: msvc-nonreg-logs
        path: ${{env.BUILD_DIR}}/tests/msvc-logs.zip

    - name: Publish output neutral files as artefact
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: msvc-neutral-files
        path: ${{github.workspace}}/msvc-neutral.zip
