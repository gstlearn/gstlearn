name: nonreg-tests_windows-latest-msvc

on:
  # Permit calling trigger
  workflow_call:
  # Activate the workflow at each push on dev branch
  #push:
  #  branches: [ dev ]
  # Activate the workflow at each pull request on dev branch
  #pull_request:
  #  branches: [ dev ]
  # Activate the workflow every day at 23:30 UTC = for Paris 00:30 (summer) or 01:30 (winter)
  #schedule:
  #  # * is a special character in YAML so you have to quote the string
  #  - cron:  '30 23 * * *'
  # Permit manual trigger
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Manual'
        required: false
        default: ''

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
  BUILD_DIR : build
  CMAKE_GENERATOR : "Visual Studio 17 2022"
  PYTHON_VERSION : "3.11"
  NUMPY_VERSION : "1.23.5"
  CMAKE_TOOLCHAIN_FILE : C:\vcpkg\scripts\buildsystems\vcpkg.cmake
  #HDF5_ROOT : hdf5 #do not use "." in the name
  #HDF5_URL : "https://www.hdfgroup.org/package/cmake-hdf5-1-12-1-zip/?wpdmdl=15723"
  #HDF5_VERSION : hdf5-1.12.1

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3

    - name: Setup Python Version
      uses: actions/setup-python@v4
      with:
        python-version: ${{env.PYTHON_VERSION}}

    - name: Install dependencies
      run: |
        echo '{
          "dependencies": [ "boost-math", "eigen3" ],
          "builtin-baseline": "bcf3d00d2116056fda0ce47615f6074ffecb7524"
        }' > vcpkg.json
        vcpkg install

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install numpy==${{env.NUMPY_VERSION}}
        python -m pip install pandas scipy mlxtend

    - name: Configure CMake
      run: |
        cmake `
          -B${{env.BUILD_DIR}} `
          -DBUILD_PYTHON=ON `
          -DPython3_ROOT_DIR="${{env.pythonLocation}}"

    - name: Build gstlearn
      run: cmake --build ${{env.BUILD_DIR}} --config ${{env.BUILD_TYPE}}

    - name: Install packages and execute non-regression tests
      run: cmake --build ${{env.BUILD_DIR}} --config ${{env.BUILD_TYPE}} --target check

    - name: Compress output logs and neutral files
      if: success() || failure()
      shell: powershell
      run: |
        cd ${{env.BUILD_DIR}}/tests
        Get-ChildItem -Recurse -Filter '*.out' | Select-Object -ExpandProperty Fullname | Resolve-Path -Relative > logs.txt
        foreach ($filename in Get-Content .\logs.txt)
        {
            Compress-Archive -Update $filename .\msvc-logs.zip
        }
        cd $HOME/gstlearn_dir
        Get-ChildItem -Recurse -Filter '*.*' | Select-Object -ExpandProperty Fullname | Resolve-Path -Relative > neutral.txt
        foreach ($filename in Get-Content .\neutral.txt)
        {
            Compress-Archive -Update $filename .\msvc-neutral.zip
        }
        Move-Item -Path msvc-neutral.zip -Destination ${{github.workspace}}

    - name: Publish output logs as artefact
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: msvc-nonreg-logs
        path: ${{env.BUILD_DIR}}/tests/msvc-logs.zip

    - name: Publish output neutral files as artefact
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: msvc-neutral-files
        path: ${{github.workspace}}/msvc-neutral.zip
