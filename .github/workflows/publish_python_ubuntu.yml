name: publish_python_ubuntu

on:
  # Permit calling the workflow from outside (https://github.com/actions/runner/discussions/1884)
  workflow_call:
    inputs:
      dry_publish:
        description: 'Dry publish (no upload)'
        type: boolean
        required: false
        default: true
  # Permit manual trigger
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Manual'
        required: false
        default: ''
      dry_publish:
        description: 'Dry publish (no upload)'
        type: boolean
        required: false
        default: false

env:
  BUILD_TYPE: Release
  BUILD_DIR : build
  BUILD_PLAT: manylinux1_x86_64
  
jobs:
  build:
    runs-on: ubuntu-latest
    container:
      # Corresponding docker file comes from:
      # https://github.com/gstlearn/docker-generate
      image: gstlearn/ubuntu-16-gstlearn
    strategy:
      matrix:
        python: [py38, py39, py310, py311, py312]

    steps:
    - uses: actions/checkout@v3

    - name: Install Python dependencies
      run: |
        export PATH=/opt/python/${{matrix.python}}/bin:$PATH
        python3 -m pip install build

    - name : Create Wheels
      run : |
        export PATH=/opt/python/${{matrix.python}}/bin:$PATH
        cmake -B${{env.BUILD_DIR}} -DCMAKE_BUILD_TYPE:STRING=${{env.BUILD_TYPE}} -DBUILD_PYTHON=ON -DBUILD_DOXYGEN=ON
        cmake --build ${{env.BUILD_DIR}} --target python_build -- -j 3
        cd ${{env.BUILD_DIR}}/python/${{env.BUILD_TYPE}}
        # Note: wheel must be declared not pure (see setup.py)
        python3 -m build --wheel -C="--build-option=--plat-name=${{env.BUILD_PLAT}}"
        cd ../../..
        echo "MY_PKG=$(ls ${{env.BUILD_DIR}}/python/${{env.BUILD_TYPE}}/dist/*)" >> "$GITHUB_ENV"

    - uses: actions/upload-artifact@v3
      # Use specific artifact identifier for publishing all versions
      with:
        name: ubuntu-python-package-${{matrix.python}}
        path: ${{env.MY_PKG}}
    
  publish:
    needs: build
    if: ${{inputs.dry_publish == false}}
    
    # Only ubuntu can upload via ssh
    runs-on: ubuntu-latest
    
    steps:
    - uses: fabien-ors/pypi-publish-action@v1
      with:
        repo: pypi
        username: __token__
        password: ${{secrets.TWINE_PYPI_PWD}}
        pattern: ubuntu-python-package-*

    #Â Delete the artifacts (for freeing storage space under github)
    - uses: geekyeggo/delete-artifact@v2
      with:
        name: ubuntu-python-package-*

   

