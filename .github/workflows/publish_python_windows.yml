name: publish_python_windows

on:
  # Permit calling the workflow from outside (https://github.com/actions/runner/discussions/1884)
  workflow_call:
    inputs:
      external_call:
        description: 'To distinguish workflow_call from other events'
        type: boolean
        required: false
        default: true
  # Permit manual trigger
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Manual'
        required: false
        default: ''
      external_call:
        description: 'To distinguish workflow_call from other events'
        type: boolean
        required: false
        default: false
        
env:
  BUILD_TYPE: Release
  BUILD_DIR : build
  GENERATOR : "Visual Studio 16 2019"
  DOXYGEN_ROOT : Doxygen
  DOXYGEN_URL : https://www.doxygen.nl/files/doxygen-1.9.8.windows.x64.bin.zip
  BOOST_ROOT: ${{github.workspace}}\boost
  BOOST_VERSION: "1.72.0"
  EIGEN_ROOT : ${{github.workspace}}\eigen
  EIGEN_VERSION : "3.4.0"
  #HDF5_ROOT : hdf5 #do not use "." in the name
  #HDF5_URL : "https://www.hdfgroup.org/package/cmake-hdf5-1-12-1-zip/?wpdmdl=15723"
  #HDF5_VERSION : hdf5-1.12.1

jobs:

  build:
    runs-on: windows-2019
    strategy:
      matrix:
        # Python version + Numpy version
        python:
          - ["3.8",  1.20.3]
          - ["3.9",  1.20.3]
          - ["3.10", 1.21.6]
          - ["3.11", 1.23.5]
          - ["3.12", 1.26.3]
        arch:
          - [win_amd64, x64, x64]
          - [win32,     x86, Win32] #Â TODO : Win32 to be removed ?

    steps:
    - uses: actions/checkout@v3

    - name: Setup Python Version
      uses: actions/setup-python@v3
      with:
        python-version: ${{matrix.python[0]}}
        architecture: ${{matrix.arch[1]}}

    - name: Install Python dependencies
      # Force specific old version for Numpy
      run: |
        python -m pip install --upgrade pip
        python -m pip install numpy==${{matrix.python[1]}} twine wheel setuptools

    - name : Download and install Doxygen
      run: |
        mkdir ${{env.DOXYGEN_ROOT}}
        cd ${{env.DOXYGEN_ROOT}}
        mkdir bin
        cd .. 
        curl --progress-bar --output ${{env.DOXYGEN_ROOT}}/download.zip ${{env.DOXYGEN_URL}}
        7z -o${{env.DOXYGEN_ROOT}}/bin x ${{env.DOXYGEN_ROOT}}/download.zip

    - name: Install the Boost headers
      uses: ./.github/workflows/install-boost-windows
      with:
        boost-root: ${{env.BOOST_ROOT}}
        boost-version: ${{env.BOOST_VERSION}}

    - name: Install the Eigen headers
      uses: ./.github/workflows/install-eigen-windows
      with:
        eigen-root: ${{env.EIGEN_ROOT}}
        eigen-version: ${{env.EIGEN_VERSION}}
        generator: "Visual Studio 17 2022"

#    - name : Download and install HDF5
#      run: | 
#        mkdir ${{env.HDF5_ROOT}}
#        curl --progress-bar --location --output ${{env.HDF5_ROOT}}/download.zip ${{env.HDF5_URL}}	
#        7z x ${{env.HDF5_ROOT}}/download.zip
#        cd CMake-${{env.HDF5_VERSION}}
#        mkdir build
#        cd build
#        cmake -G ${{env.GENERATOR}} -DHDF5_GENERATE_HEADERS:BOOL=OFF -DBUILD_SHARED_LIBS:BOOL=OFF -DDEFAULT_API_VERSION:STRING=v110 -DCMAKE_BUILD_TYPE:STRING=Release -DHDF5_BUILD_FORTRAN:BOOL=OFF -DHDF5_BUILD_CPP_LIB:BOOL=ON -DHDF5_BUILD_JAVA:BOOL=OFF -DCMAKE_INSTALL_PREFIX:PATH=${{env.PROG_ROOT}}/${{env.HDF5_ROOT}} -DHDF5_ENABLE_SZIP_SUPPORT:BOOL=OFF -DHDF5_ENABLE_Z_LIB_SUPPORT:BOOL=OFF -DBUILD_TESTING:BOOL=OFF -DHDF5_BUILD_TOOLS:BOOL=OFF ../${{env.HDF5_VERSION}}
#        cmake --build . --target all --config Release
#        cmake --build . --target install --config Release

    - name : Create Wheels
      run : |
        cmake -B${{env.BUILD_DIR}} -G "${{env.GENERATOR}}" -A ${{matrix.arch[2]}} -DPython3_ROOT_DIR="${{env.pythonLocation}}" -DBUILD_PYTHON=ON -DBUILD_DOXYGEN=ON -DBoost_ROOT=${{env.BOOST_ROOT}} -DUSE_HDF5=OFF -DDoxygen_ROOT=${{env.DOXYGEN_ROOT}} -DEigen3_ROOT=${{env.EIGEN_ROOT}} 
        cmake --build ${{env.BUILD_DIR}} --target python_build --config ${{env.BUILD_TYPE}}
        cd ${{env.BUILD_DIR}}\python\${{env.BUILD_TYPE}}
        # Note: wheel must be declared not pure (see setup.py)
        python setup.py bdist_wheel --plat-name=${{matrix.arch[0]}}

    - name : Upload
      run : python -m twine upload ${{env.BUILD_DIR}}\python\${{env.BUILD_TYPE}}\dist\*
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{secrets.TWINE_PYPI_PWD}}
        TWINE_REPOSITORY: pypi
