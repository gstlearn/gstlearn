name: publish_python_windows

on:
  # Permit calling the workflow from outside (https://github.com/actions/runner/discussions/1884)
  workflow_call:
    inputs:
      dry_publish:
        description: 'Dry publish (no upload)'
        type: boolean
        required: false
        default: true
  # Permit manual trigger
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Manual'
        required: false
        default: ''
      dry_publish:
        description: 'Dry publish (no upload)'
        type: boolean
        required: false
        default: false

env:
  BUILD_TYPE: Release
  BUILD_DIR : build
  CMAKE_GENERATOR : "Visual Studio 16 2019"
  DOXYGEN_ROOT : ${{github.workspace}}\doxygen
  DOXYGEN_VERSION : "1.9.8"
  CMAKE_TOOLCHAIN_FILE : C:\vcpkg\scripts\buildsystems\vcpkg.cmake
  #HDF5_ROOT : hdf5 #do not use "." in the name
  #HDF5_URL : "https://www.hdfgroup.org/package/cmake-hdf5-1-12-1-zip/?wpdmdl=15723"
  #HDF5_VERSION : hdf5-1.12.1

jobs:
  build:
    runs-on: windows-2019
    strategy:
      matrix:
        # Python version + Numpy version
        python: [
          # Double quote for version is needed otherwise 3.10 => 3.1
            {py: "3.8",  nu: 1.20.3},
            {py: "3.9",  nu: 1.20.3},
            {py: "3.10", nu: 1.21.6},
            {py: "3.11", nu: 1.23.5},
            {py: "3.12", nu: 1.26.3}
          ]
        arch: [
            {pl: win_amd64, ar: x64, of: x64},
            {pl: win32,     ar: x86, of: Win32} #Â TODO : Win32 to be removed ?
          ]

    steps:
    - uses: actions/checkout@v3

    - name: Setup Python Version
      uses: actions/setup-python@v3
      with:
        python-version: ${{matrix.python.py}}
        architecture: ${{matrix.arch.ar}}

    - name: Install dependencies
      run: |
        echo '{
          "dependencies": [ "boost-math", "eigen3" ],
          "builtin-baseline": "bcf3d00d2116056fda0ce47615f6074ffecb7524"
        }' > vcpkg.json
        vcpkg install
      env:
        VCPKG_DEFAULT_TRIPLET: ${{ matrix.arch.ar }}-windows

    - name: Install Python dependencies
      # Force specific old version for Numpy
      run: |
        python -m pip install --upgrade pip
        python -m pip install numpy==${{matrix.python.nu}} twine build

    - name: Install Doxygen under windows
      uses: fabien-ors/install-doxygen-windows-action@v1
      with:
        doxygen-root: ${{env.DOXYGEN_ROOT}}
        doxygen-version: ${{env.DOXYGEN_VERSION}}

#    - name : Download and install HDF5
#      run: |
#        mkdir ${{env.HDF5_ROOT}}
#        curl --progress-bar --location --output ${{env.HDF5_ROOT}}/download.zip ${{env.HDF5_URL}}
#        7z x ${{env.HDF5_ROOT}}/download.zip
#        cd CMake-${{env.HDF5_VERSION}}
#        mkdir build
#        cd build
#        cmake -G ${{env.GENERATOR}} -DHDF5_GENERATE_HEADERS:BOOL=OFF -DBUILD_SHARED_LIBS:BOOL=OFF -DDEFAULT_API_VERSION:STRING=v110 -DCMAKE_BUILD_TYPE:STRING=Release -DHDF5_BUILD_FORTRAN:BOOL=OFF -DHDF5_BUILD_CPP_LIB:BOOL=ON -DHDF5_BUILD_JAVA:BOOL=OFF -DCMAKE_INSTALL_PREFIX:PATH=${{env.PROG_ROOT}}/${{env.HDF5_ROOT}} -DHDF5_ENABLE_SZIP_SUPPORT:BOOL=OFF -DHDF5_ENABLE_Z_LIB_SUPPORT:BOOL=OFF -DBUILD_TESTING:BOOL=OFF -DHDF5_BUILD_TOOLS:BOOL=OFF ../${{env.HDF5_VERSION}}
#        cmake --build . --target all --config Release
#        cmake --build . --target install --config Release

    - name : Configure build directory
      run : |
        cmake `
          -B${{ env.BUILD_DIR }} `
          -A ${{matrix.arch.of}} `
          -DBUILD_PYTHON=ON `
          -DBUILD_R=OFF `
          -DPython3_ROOT_DIR="${{env.pythonLocation}}" `
          -DBUILD_DOXYGEN=ON

    - name : Build the package
      run : |
        cmake --build ${{env.BUILD_DIR}} --target python_build --config ${{env.BUILD_TYPE}}

    - name : Create Wheels
      run : |
        cd ${{env.BUILD_DIR}}\python\${{env.BUILD_TYPE}}
        # Note: wheel must be declared not pure (see setup.py)
        python -m build --wheel -C="--build-option=--plat-name=${{matrix.arch.pl}}"
        cd ..\..\..
        $PKG_PATH = Get-ChildItem -Path "${{env.BUILD_DIR}}/python/${{env.BUILD_TYPE}}/dist/*" -File
        echo "MY_PKG=$PKG_PATH" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append

    - uses: actions/upload-artifact@v3
      # Use specific artifact identifier for publishing all versions
      with:
        name: windows-python-package-${{matrix.arch.ar}}-${{matrix.python.py}}
        path: ${{env.MY_PKG}}

  publish:
    needs: build
    if: ${{inputs.dry_publish == false}}

    # Only ubuntu can upload via ssh
    runs-on: ubuntu-latest

    steps:
    - uses: fabien-ors/pypi-publish-action@v1
      with:
        repo: pypi
        username: __token__
        password: ${{secrets.TWINE_PYPI_PWD}}
        pattern: windows-python-package-*

    # Delete the artifacts (for freeing storage space under github)
    - uses: geekyeggo/delete-artifact@v2
      with:
        name: windows-python-package-*

