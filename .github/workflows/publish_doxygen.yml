name: publish_doxygen

on:
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Manual'
        required: false
        default: ''

env:
  BUILD_TYPE: Release
  BUILD_DIR : build

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    # Boost and Eigen are not needed but our cmake for doxygen cannot ignore the dependency yet
    - name: Install dependencies
      run: sudo apt-get update && sudo apt-get install -yq doxygen libboost-all-dev libeigen3-dev 

    - name: Build doxygen documentation and save generated folder name in the environment
      run: |
        cmake -B${{env.BUILD_DIR}} -DBUILD_DOXYGEN=ON -DBUILD_PYTHON=OFF -DBUILD_R=OFF
        cmake --build ${{env.BUILD_DIR}} --target doxygen
        PROJECT_VERSION=$(cmake --build ${{env.BUILD_DIR}} --target print_version | grep PROJECT_VERSION | cut -d "=" -f2 | xargs)
        echo "HTML_FOLDER=${{env.BUILD_DIR}}/doxygen/html" >> "$GITHUB_ENV"
        echo "PROJECT_VERSION=${PROJECT_VERSION}" >> "$GITHUB_ENV"

    - name: Print version
      run: echo "PROJECT_VERSION=${{ env.PROJECT_VERSION }}"

    - uses: actions/upload-artifact@v3 
      with:
        # This will become the folder name in the server
        name: doxygen-${{ env.PROJECT_VERSION }}
        path: ${{ env.HTML_FOLDER }}

  publish:
    needs: build
    # Only ubuntu can upload to CRAN easily (ssh)
    runs-on: ubuntu-latest
    
    steps:
    - uses: fabien-ors/folder-publish-action@v1
      with:
        host: ${{ secrets.CG_HOST }}
        username: ${{ secrets.CG_USR }}
        password: ${{ secrets.CG_PWD }}
        dest-path: "/var/www/html/gstlearn"

    # Delete the artifacts (for freeing storage space under github)
    - uses: geekyeggo/delete-artifact@v2
      with:
        name: doxygen-*