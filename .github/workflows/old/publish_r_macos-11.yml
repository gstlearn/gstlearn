name: publish_r_macos-11

on:
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Manual'
        required: false
        default: ''

env:
  BUILD_TYPE: Release
  BUILD_DIR : build
  SWIG_ROOT  : ${{github.workspace}}/swig_420b
  BOOST_ROOT: boost
  BOOST_URL: https://sourceforge.net/projects/boost/files/boost/1.72.0/boost_1_72_0.tar.bz2/download
  EIGEN_ROOT : Eigen
  EIGEN_URL : https://gitlab.com/libeigen/eigen/-/archive/3.4.0/eigen-3.4.0.zip
  
jobs:
  build:
    runs-on: ${{matrix.os[0]}}
    strategy :
      matrix:
        # Last release from here https://cran.r-project.org/src/base/R-4/
        r_version: ["4.0.5","4.1.3","4.2.3","4.3.0"]
        os:
          - [macos-11, "macosx_11_0_arm64"]
        
    steps:
    - uses: actions/checkout@v3

    - name: Setup R Version
      uses: r-lib/actions/setup-r@v2
      with:
        r-version: ${{matrix.r_version}}
        
    - name: Install R dependencies
      run: |
        Rscript -e "install.packages(c('rlang'), repos='https://cloud.r-project.org/', dependencies = TRUE)"
        Rscript -e "install.packages(c('devtools'), repos='https://cloud.r-project.org/', dependencies = TRUE)"

####################################################################################################
# Doxygen

    - name : Download and install Doxygen
      run: brew install doxygen

####################################################################################################
# Boost

    - name : Download and uncompressed Boost headers
      run: |
        mkdir ${{env.BOOST_ROOT}}
        curl --progress-bar --location --output ${{env.BOOST_ROOT}}/download.tar.bz2 ${{env.BOOST_URL}}
        7z -o${{env.BOOST_ROOT}} x ${{env.BOOST_ROOT}}/download.tar.bz2 -y -bd
        7z -o${{env.BOOST_ROOT}} x ${{env.BOOST_ROOT}}/download.tar -y -bd
        cd ${{env.BOOST_ROOT}} && cp -r boost_*/* .

####################################################################################################
# Eigen

    - name : Download and uncompressed Eigen headers
      run: |
        mkdir ${{env.EIGEN_ROOT}}
        curl --progress-bar --location --output ${{env.EIGEN_ROOT}}/download.zip ${{env.EIGEN_URL}}
        7z -o${{env.EIGEN_ROOT}} x ${{env.EIGEN_ROOT}}/download.zip -y -bd
        cd ${{env.EIGEN_ROOT}} && cp -r eigen-*/* .

    - name: Compile and install [customized] SWIG 4.2.0b
      # TODO : Use a tagged realease (not the master branch)
      run: |
        mkdir swig_src
        cd swig_src
        git clone https://github.com/fabien-ors/swig.git
        cd swig
        cmake -Bbuild -DCMAKE_INSTALL_PREFIX:PATH=${{env.SWIG_ROOT}}
        cd build
        make
        make install

    - name : Build the package and save generated file name in the environment
      run : |
        cmake -B${{env.BUILD_DIR}} -DCMAKE_BUILD_TYPE:STRING=${{env.BUILD_TYPE}} -DBUILD_R=ON -DBUILD_PYTHON=OFF -DUSE_HDF5=OFF -DSWIG_EXECUTABLE=${{env.SWIG_ROOT}}/bin/swig -DEigen3_ROOT=${{env.EIGEN_ROOT}} -DBUILD_DOXYGEN=ON
        cmake --build ${{env.BUILD_DIR}} --target r_install
        echo "MY_PKG=$(ls ${{env.BUILD_DIR}}/r/${{env.BUILD_TYPE}}/gstlearn_*.tgz)" >> "$GITHUB_ENV"

    - uses: actions/upload-artifact@v3
      # Use specific artifact identifier for publishing all R versions
      with:
        name: macos-package-${{matrix.r_version}}
        path: ${{ env.MY_PKG }}
    
  publish:
    needs: build
    # Only ubuntu can upload via ssh
    runs-on: ubuntu-latest
    
    steps:
    - uses: fabien-ors/cran-publish-action@v1
      with:
        host: ${{ secrets.CG_HOST }}
        username: ${{ secrets.CG_USR }}
        password: ${{ secrets.CG_PWD }}
        repo-path: "/var/www/html/cran"

    # Delete the artifacts (for freeing storage space under github)
    - uses: geekyeggo/delete-artifact@v2
      with:
        name: macos-package-*

