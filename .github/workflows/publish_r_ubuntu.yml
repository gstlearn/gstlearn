name: publish_r_ubuntu

on:
  # Permit calling the workflow from outside (https://github.com/actions/runner/discussions/1884)
  workflow_call:
    inputs:
      dry_publish:
        description: 'Dry publish (no upload)'
        type: boolean
        required: false
        default: true
  # Permit manual trigger
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Manual'
        required: false
        default: ''
      dry_publish:
        description: 'Dry publish (no upload)'
        type: boolean
        required: false
        default: false

env:
  CMAKE_BUILD_TYPE : Release
  BUILD_DIR : build
  SWIG_ROOT : ${{github.workspace}}/swig_420b

jobs:
  build:
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        # Last releases from here https://cran.r-project.org/src/base/R-4/
        # Only last version of R for Linux (fake source package)
        r_version: [4.4.1]
        # Only one old Linux
        os: [ubuntu-20.04]

    steps:
    - uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        sudo rm /etc/apt/sources.list.d/microsoft-prod.list
        sudo apt-get update
        sudo apt-get install -yq \
          doxygen \
          libhdf5-dev \
          libopenmpi-dev \
          libboost-dev \
          libeigen3-dev

    - name: Setup R Version
      uses: r-lib/actions/setup-r@v2
      with:
        r-version: ${{matrix.r_version}}

    - name: Install roxygen2
      uses: r-lib/actions/setup-r-dependencies@v2
      with:
        packages: roxygen2
        install-pandoc: false

    - name: Install the customized SWIG from source
      uses: fabien-ors/install-swig-unix-action@v1
      with:
        swig-root: ${{env.SWIG_ROOT}}
        generator: "Unix Makefiles"

    - name : Configure build directory
      run : |
        cmake \
          -B${{ env.BUILD_DIR }} \
          -DBUILD_PYTHON=OFF \
          -DBUILD_R=ON \
          -DBUILD_DOXYGEN=ON \
          -DSWIG_EXECUTABLE=${{env.SWIG_ROOT}}/bin/swig

    - name : Build the package and save generated file name in the environment
      run : |
        cmake --build ${{env.BUILD_DIR}} --parallel 3 --target r_install
        echo "MY_PKG=$(ls ${{env.BUILD_DIR}}/r/${{env.CMAKE_BUILD_TYPE}}/gstlearn_*.tar.gz)" >> "$GITHUB_ENV"

    - uses: actions/upload-artifact@v4
      with:
        name: ubuntu-r-package-${{matrix.os}}-r-${{matrix.r_version}}
        path: ${{env.MY_PKG}}

  publish:
    needs: build
    if: ${{inputs.dry_publish == false}}

    # Only ubuntu can upload to CRAN easily (ssh)
    runs-on: ubuntu-latest

    steps:
    - uses: fabien-ors/cran-publish-action@v3
      with:
        host: ${{secrets.CG_HOST}}
        username: ${{secrets.CG_USR}}
        password: ${{secrets.CG_PWD}}
        repo-path: "/var/www/html/cran"

    # Delete the artifacts (for freeing storage space under github)
    - uses: geekyeggo/delete-artifact@v5
      with:
        name: ubuntu-r-package-${{matrix.os}}-r-${{matrix.r_version}}
