name: publish_python_macos-10-11

on:
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Manual'
        required: false
        default: ''

env:
  BUILD_TYPE: Release
  BUILD_DIR : build

  BOOST_ROOT: boost
  BOOST_URL: https://sourceforge.net/projects/boost/files/boost/1.72.0/boost_1_72_0.tar.bz2/download
#  HDF5_ROOT : hdf5 #do not use "." in the name 
#  HDF5_URL : "https://www.hdfgroup.org/package/cmake-hdf5-1-12-1.tar.gz/?wpdmdl=15722"
#  HDF5_VERSION : hdf5-1.12.1

jobs:
  build:
    runs-on: ${{matrix.os[0]}}
    strategy :
      matrix:
        # Python version + Numpy version
        python:
          - ["3.8",  "1.20.3"]
          - ["3.9",  "1.20.3"]
          - ["3.10", "1.21.6"]
          - ["3.11", "1.23.5"]
        os:
          - [macos-10.15, "macosx_10_15_x86_64"]
          - [macos-11,    "macosx_11_0_arm64"]

    steps:
    - uses: actions/checkout@v3

    - name: Setup Python Version
      uses: actions/setup-python@v4
      with:
        python-version: ${{matrix.python[0]}}

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install numpy==${{matrix.python[1]}} twine wheel pybind11

####################################################################################################
# Doxygen

#    - name : Download and install Doxygen
#      run: brew install doxygen ${{env.PYTHON}}

####################################################################################################
# HDF5
  
#    - name : HDF5
#      run : |
#        mkdir ${{env.HDF5_ROOT}}
#        curl --progress-bar --location --output ${{env.HDF5_ROOT}}/download.tar.gz ${{env.HDF5_URL}}
#        7z  -o${{env.HDF5_ROOT}} x ${{env.HDF5_ROOT}}/download.tar.gz -y -bd
#        7z  -o${{env.HDF5_ROOT}} x ${{env.HDF5_ROOT}}/download.tar -y -bd
#        ls
#        cd ${{env.HDF5_ROOT}} 
#        ls
#        cd CMake-${{env.HDF5_VERSION}}
#        mkdir build
#        cd build
#        cmake -DHDF5_GENERATE_HEADERS:BOOL=OFF -DBUILD_SHARED_LIBS:BOOL=OFF -DDEFAULT_API_VERSION:STRING=v110 -DCMAKE_BUILD_TYPE:STRING=Release -DHDF5_BUILD_FORTRAN:BOOL=OFF -DHDF5_BUILD_CPP_LIB:BOOL=ON -DHDF5_BUILD_JAVA:BOOL=OFF -DCMAKE_INSTALL_PREFIX:PATH=${{env.PROG_ROOT}}/${{env.HDF5_ROOT}} -DHDF5_ENABLE_SZIP_SUPPORT:BOOL=OFF -DHDF5_ENABLE_Z_LIB_SUPPORT:BOOL=OFF -DBUILD_TESTING:BOOL=OFF -DHDF5_BUILD_TOOLS:BOOL=OFF ../${{env.HDF5_VERSION}}
#        cmake --build . --target all --config Release -- -j 3
#        cmake --build . --target install --config Release

####################################################################################################
# Boost

    - name : Download and uncompressed Boost headers
      run: |
        mkdir ${{env.BOOST_ROOT}}
        curl --progress-bar --location --output ${{env.BOOST_ROOT}}/download.tar.bz2 ${{env.BOOST_URL}}
        7z -o${{env.BOOST_ROOT}} x ${{env.BOOST_ROOT}}/download.tar.bz2 -y -bd
        7z -o${{env.BOOST_ROOT}} x ${{env.BOOST_ROOT}}/download.tar -y -bd
        cd ${{env.BOOST_ROOT}} && cp -r boost_*/* .

####################################################################################################
# Configure compilation

    - name : Configure Cmake
      # Error locating python on MacOS : https://github.com/actions/setup-python/issues/121
      run : cmake -B${{env.BUILD_DIR}} -DCMAKE_BUILD_TYPE:STRING=${{env.BUILD_TYPE}} -DBoost_ROOT=${{env.BOOST_ROOT}} -DPython3_ROOT_DIR="${{env.pythonLocation}}" -DBUILD_PYTHON=ON -DUSE_HDF5=OFF
           #cmake -B${{env.BUILD_DIR}} -DCMAKE_BUILD_TYPE:STRING=${{env.BUILD_TYPE}} -DBoost_ROOT=${{env.BOOST_ROOT}} -DPython3_ROOT_DIR="${{env.pythonLocation}}" -DBUILD_PYTHON=ON -DHDF5_ROOT:PATH=${{env.PROG_ROOT}}/${{env.HDF5_ROOT}}

####################################################################################################
# Compile library and build python package

    - name : Build python package
      run : cmake --build ${{env.BUILD_DIR}} --target python_build -- -j 3
 
####################################################################################################
# Build and upload wheel

    - name : Build and upload wheel
      run: |
        cd ${{env.BUILD_DIR}}/python/${{env.BUILD_TYPE}}
        # Note: wheel must be declared pure (see setup.py)
        python setup.py bdist_wheel --plat-name=${{matrix.os[1]}}
        python -m twine upload dist/*
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{secrets.TWINE_TEST_TOKEN}}
        TWINE_REPOSITORY: testpypi


    

   


   

