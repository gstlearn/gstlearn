name: publish_python_macos

on:
  # Permit calling the workflow from outside (https://github.com/actions/runner/discussions/1884)
  workflow_call:
    inputs:
      dry_publish:
        description: 'Dry publish (no upload)'
        type: boolean
        required: false
        default: true
  # Permit manual trigger
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Manual'
        required: false
        default: ''
      dry_publish:
        description: 'Dry publish (no upload)'
        type: boolean
        required: false
        default: false

env:
  CMAKE_BUILD_TYPE : Release
  BUILD_DIR : build

jobs:
  build:
    runs-on: ${{matrix.arch.os}}
    strategy:
      matrix:
        # Python version
        python: [
          # Double quote for version is needed otherwise 3.10 => 3.1
            {py: "3.9"},
            {py: "3.10"},
            {py: "3.11"},
            {py: "3.12"},
            {py: "3.13"}
          ]
        arch: [
            {ar: x86_64, os: macos-13, pat: /usr/local},
            {ar: arm64,  os: macos-14, pat: /opt/homebrew},
            {ar: arm64,  os: macos-15, pat: /opt/homebrew}
          ]
        exclude:
          - arch: {os: macos-14}
            python: {py: "3.9"}
          - arch: {os: macos-15}
            python: {py: "3.9"}

    steps:
    - uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        brew install swig
        brew install --formula doxygen
        brew install llvm
        brew install boost
        brew install eigen

    - name: Setup Python Version
      uses: actions/setup-python@v5
      with:
        python-version: ${{matrix.python.py}}

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install numpy twine build

    - name: Build & install NLopt static libraries
      uses: ./.github/actions/nlopt_static_unix

    - name: Build & install HDF5 static libraries
      uses: ./.github/actions/hdf5_static_unix

    - name : Configure build directory
      run : |
        cmake \
          -B${{ env.BUILD_DIR }} \
          -DHDF5_USE_STATIC_LIBRARIES=ON \
          -DBUILD_PYTHON=ON \
          -DBUILD_R=OFF \
          -DPython3_ROOT_DIR="${{env.pythonLocation}}" \
          -DBUILD_DOC=ON
      env:
        CC: ${{matrix.arch.pat}}/opt/llvm/bin/clang
        CXX: ${{matrix.arch.pat}}/opt/llvm/bin/clang++

    - name : Build the package
      run : |
        cmake --build ${{env.BUILD_DIR}} --parallel 3 --target python_build

    - name : Create Wheel
      run : |
        cd ${{env.BUILD_DIR}}/python/${{env.CMAKE_BUILD_TYPE}}
        # Note: wheel must be declared not pure (see setup.py)
        python -m build --wheel
        cd ../../..
        echo "MY_PKG=$(ls ${{env.BUILD_DIR}}/python/${{env.CMAKE_BUILD_TYPE}}/dist/*)" >> "$GITHUB_ENV"

    - uses: actions/upload-artifact@v4
      # Use specific artifact identifier for publishing all versions
      with:
        name: macos-python-package-${{matrix.arch.os}}-${{matrix.python.py}}
        path: ${{env.MY_PKG}}

  test:
    needs: build
    runs-on: ${{matrix.arch.os}}
    strategy:
      matrix:
        python: [
        # Double quote for version is needed otherwise 3.10 => 3.1
            {py: "3.9"},
            {py: "3.10"},
            {py: "3.11"},
            {py: "3.12"},
            {py: "3.13"}
          ]
        arch: [
            {ar: x86_64, os: macos-13},
            {ar: arm64,  os: macos-14},
            {ar: arm64,  os: macos-15}
          ]
        exclude:
          - arch: {os: macos-14}
            python: {py: "3.9"}
          - arch: {os: macos-15}
            python: {py: "3.9"}

    steps:
    - uses: actions/checkout@v4

    - uses: actions/download-artifact@v4
      with:
        name: macos-python-package-${{matrix.arch.os}}-${{matrix.python.py}}

    - name: Setup Python Version
      uses: actions/setup-python@v5
      with:
        python-version: ${{matrix.python.py}}

    - name: Install macOS dependencies
      run: brew install llvm

    - name: Install Python package
      run: pip install "./$(ls *.whl)[conv]"

    - name: Test installed Python package
      run: |
        python -c "import gstlearn as gl; gl.acknowledge_gstlearn()"
        python tests/py/test_Arguments.py
        python tests/py/test_Assessors.py
        python tests/py/test_Matrix.py

  publish:
    needs: test
    if: ${{inputs.dry_publish == false}}

    # Only ubuntu can upload via ssh
    runs-on: ubuntu-latest

    steps:
    # Upload packages to pypi
    - uses: fabien-ors/pypi-publish-action@v2
      with:
        repo: pypi
        username: __token__
        password: ${{secrets.TWINE_PYPI_PWD}}
        pattern: macos-python-package-*

    # Delete the artifacts (for freeing storage space under github)
    - uses: geekyeggo/delete-artifact@v5
      with:
        name: macos-python-package-*

